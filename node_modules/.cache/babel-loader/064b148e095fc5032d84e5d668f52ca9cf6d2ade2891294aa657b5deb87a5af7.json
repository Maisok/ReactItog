{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21039\\\\Desktop\\\\React\\\\my-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const addItem = () => {\n    if (inputValue.trim() !== '') {\n      setItems([...items, inputValue]);\n      setInputValue('');\n    } else {\n      alert('вы не ввели задачу');\n    }\n  };\n  const deleteItem = index => {\n    const updatedItems = [...items];\n    updatedItems.splice(index, 1);\n    setItems(updatedItems);\n  };\n  const editItem = (index, newValue) => {\n    const updatedItems = [...items];\n    updatedItems[index] = newValue;\n    setItems(updatedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: item,\n          onChange: e => editItem(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(index),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dLPUah1aqPhTEjz1t77n022eOEc=\");\n_c = App;\n;\nexport default App;\n\n// import React, { useState } from 'react'\n\n// function App() {\n//   const spisok = [\n\n//     { id: 0, name: 'Дело 1' },\n//     { id: 1, name: 'Дело 2' },\n//     { id: 2, name: 'Дело 3' },\n\n//   ]\n\n//   const [STspisok, changeSTspisok] = useState(spisok)\n\n//   const res = spisok.map((spisok)=>\n//   <li key={spisok.id}>{spisok.name}<button>Сделано</button><button>Удалить</button><button>Редактировать</button></li>\n//   );\n\n//   return (\n//     <div>\n//       <input type=\"text\"/><button>Добавить</button>\n//       <ul>\n//         {res}\n//       </ul>\n//     </div>\n//   )\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","items","setItems","inputValue","setInputValue","addItem","trim","alert","deleteItem","index","updatedItems","splice","editItem","newValue","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","_c","$RefreshReg$"],"sources":["C:/Users/21039/Desktop/React/my-app/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App (){\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const addItem = () => {\n    if (inputValue.trim() !== '') {\n      setItems([...items, inputValue]);\n      setInputValue('');\n    }\n\n    else{\n      alert('вы не ввели задачу')\n    }\n  };\n\n  const deleteItem = (index) => {\n    const updatedItems = [...items];\n    updatedItems.splice(index, 1);\n    setItems(updatedItems);\n  };\n\n\n  const editItem = (index, newValue) => {\n    const updatedItems = [...items];\n    updatedItems[index] = newValue;\n    setItems(updatedItems);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)}/>\n      <button onClick={addItem}>Добавить</button>\n\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            <input type=\"checkbox\"  />\n            <input type=\"text\" value={item} onChange={(e) => editItem(index, e.target.value)}\n            />\n            <button onClick={() => deleteItem(index)}>Удалить</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n// import React, { useState } from 'react'\n\n// function App() {\n//   const spisok = [\n\n//     { id: 0, name: 'Дело 1' },\n//     { id: 1, name: 'Дело 2' },\n//     { id: 2, name: 'Дело 3' },\n\n//   ]\n\n//   const [STspisok, changeSTspisok] = useState(spisok)\n\n//   const res = spisok.map((spisok)=>\n//   <li key={spisok.id}>{spisok.name}<button>Сделано</button><button>Удалить</button><button>Редактировать</button></li>\n//   );\n\n//   return (\n//     <div>\n//       <input type=\"text\"/><button>Добавить</button>\n//       <ul>\n//         {res}\n//       </ul>\n//     </div>\n//   )\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}